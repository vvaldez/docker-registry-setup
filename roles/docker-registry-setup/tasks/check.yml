---
# only check for Undercloud match if user didn't explicitly set that bool on true (meaning they are expecting the host to be an Undercloud, so no need to dynamically check)
- import_tasks: undercloud/check.yml
  when: docker_registry_setup_undercloud_check | default(False) == True
  become: true
  become_user: stack

# Set port to default 8787 if undercloud
- set_fact:
    docker_registry_setup_local_port: 8787
  when: docker_registry_setup_on_undercloud | default(False) | bool == True

- name: check for docker images
  uri: 
    url: http://{{ docker_registry_setup_local_hostname }}:{{ docker_registry_setup_local_port }}{{ docker_registry_setup_url_suffix }}
    timeout: "{{ pause_delay | default(3) }}"
    status: 200,-1
  register: docker_catalog
  ignore_errors: true

- set_fact:
    repositories: []
    
- name: capture any repositories
  set_fact:
    repositories: "{{ docker_catalog.json.repositories|default('[]') }}"
  when: not docker_catalog.failed

- debug:
    msg: "Found the following repositories{{':'}} {{ repositories }}"

- name: check if any images exist
  set_fact:
    docker_registry_setup_configured: True
  when: not repositories == []

# If the variable 'docker_registry_setup_firewall' is not set, determine firewall type
- name: check what filrewall this system uses if not specified
  block:
    - name: check for firewalld
      command: systemctl status firewalld
      register: firewalld_status
      ignore_errors: yes

    - name: check for iptables
      command: systemctl status iptables
      register: iptables_status
      ignore_errors: yes

    - name: set fact for discovered firewall type
      set_fact:
        docker_registry_setup_firewall: 'firewalld'
      when: not firewalld_status.failed | default(None)

    - name: set fact for discovered firewall type
      set_fact:
        docker_registry_setup_firewall: 'iptables'
      when: not iptables_status.failed | default(None)
  when: docker_registry_setup_firewall | default('')  == ''
...
