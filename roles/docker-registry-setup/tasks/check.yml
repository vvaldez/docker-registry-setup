---
- name: check for docker images
  uri: 
    url: http://{{ docker_registry_setup_local_hostname }}:{{ docker_registry_setup_local_port }}{{ docker_registry_setup_url_suffix }}
    timeout: "{{ pause_delay | default(3) }}"
    status: 200,-1
  register: docker_catalog
  ignore_errors: true

- set_fact:
    repositories: []
    
- name: capture any repositories
  set_fact:
    repositories: "{{ docker_catalog.json.repositories|default('[]') }}"
  when: not docker_catalog.failed

- debug:
    msg: "Found the following repositories{{':'}} {{ repositories }}"

- name: check if any images exist
  set_fact:
    docker_registry_setup_configured: True
  when: not repositories == []

- block:
    - name: check if this system is an OpenStack Undercloud
      command: rpm -q {{ package }}
      register: packages_status
      ignore_errors: yes
      loop: "{{ docker_registry_setup_undercloud_profile.packages }}"
      loop_control:
        loop_var: package
    
    - name: check if this system is an OpenStack Undercloud
      stat
      register: files_status
      ignore_errors: yes
      loop: "{{ docker_registry_setup_undercloud_profile.files }}"
      loop_control:
        loop_var: files
      
    - name: check if this system is an OpenStack Undercloud
      stat
      register: services_status
      ignore_errors: yes
      loop: "{{ docker_registry_setup_undercloud_profile.services }}"
      loop_control:
        loop_var: services
      
    - name: check if this system is an OpenStack Undercloud
      stat
      register: dirs_status
      ignore_errors: yes
      loop: "{{ docker_registry_setup_undercloud_profile.dirs }}"
      loop_control:
        loop_var: dirs
  
- block:
    - name: set fact if services match
      set_fact:
        - docker_registry_setup_undercloud_services: True 
        
  when:
    - 
...
