---
- name: pull images from upstream registry
  command: "docker pull --all-tags "{{ docker_registry_setup_upstream_hostname }}:{{ docker_registry_setup_upstream_port }}/{{ docker_registry_setup_image_namespace }}/{{ docker_registry_setup_image_prefix }}{{ image.imagename }}"
  loop: "{{ docker_registry_setup_container_images }}"
  loop_control:
    loop_var: image

- name: tag retrieved images for local registry
  command: "docker tag {{ docker_registry_setup_upstream_hostname }}:{{ docker_registry_setup_upstream_port }}/{{ docker_registry_setup_image_namespace }}/{{ docker_registry_setup_image_prefix }}{{ image.imagename }} {{ docker_registry_setup_local_hostname }}:{{ docker_registry_setup_local_port }}/{{ docker_registry_setup_image_namespace }}/{{ docker_registry_setup_image_prefix }}{{ image.imagename }}:{{ docker_registry_setup_image_tag }}"
  loop: "{{ docker_registry_setup_container_images }}"
  loop_control:
    loop_var: image

- name: push docker images from local cache to local registry
  command: "docker push {{ docker_registry_setup_local_hostname }}:{{ docker_registry_setup_local_port }}/{{ docker_registry_setup_image_namespace }}/{{ docker_registry_setup_image_prefix }}{{ image.imagename }}:{{ docker_registry_setup_image_tag }}"
  loop: "{{ docker_registry_setup_container_images }}"
  loop_control:
    loop_var: image

# The following task DOES work, but we found that we need to pull all tags which requires the CLI
#- name: pull docker images
#  docker_image: 
#    name: "{{ image.imagename }}"
#    state: present
#    pull: true
#    push: false
#  loop: "{{ docker_registry_setup_container_images }}"
#  loop_control:
#    loop_var: image

# The following task is more desireable as it uses the docker_image module, but I could not get it working in a short time so for now implementing via docker cli
#- name: push docker images
#  docker_image: 
#    name: "{{ docker_registry_setup_image_prefix }}{{ image.imagename }}"
#    repository: "{{ docker_registry_setup_local_hostname }}:{{ docker_registry_setup_local_port }}/{{ docker_registry_setup_image_namespace }}"
#    state: present
#    docker_host: "tcp://{{ inventory_hostname }}:{{ docker_registry_setup_local_port }}"
#    pull: false
#    push: true
#  loop: "{{ docker_registry_setup_container_images }}"
#  loop_control:
#    loop_var: image
...
