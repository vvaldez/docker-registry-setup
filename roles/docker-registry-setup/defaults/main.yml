---
# Default is the upstream CDN registry.access.redhat.com but can be set to anything
docker_registry_setup_upstream_hostname: registry.access.redhat.com

# The upstream CDN doesn't use a port, so there is branch logic for split tasks based on if a port is used here or not. If using a different source other than the default CDN, then specify the port the registry is listening on here (e.g. 5000):
docker_registry_setup_upstream_port: ''

# This should be the target host, but can be set to something else if needed, for example:
#docker_registry_setup_local_hostname: "{{ ansible_all_ipv4_addresses | ipaddr(provisioning_cidr) | first() }}"
docker_registry_setup_local_hostname: "{{ inventory_hostname }}"

# Local port to configure the registry on this host
docker_registry_setup_local_port: 5000

# Set to one of "['firewalld,'iptables'] to manage the local firewall, or leave this blank to have it auto-detected
docker_registry_setup_firewall: ''

# These are tunable if needed, but set to the default on CDN for OpenStack
docker_registry_setup_url_suffix: "/v2/_catalog"
docker_registry_setup_image_prefix: "openstack-"
docker_registry_setup_image_rhosp_version: rhosp13
docker_registry_setup_image_tag: latest

# Whether to dynamically check for an Undercloud. You can set this to false but be sure to also set 'docker_registry_setup_on_undercloud' correctly
docker_registry_setup_undercloud_check: True

# This variable can explicitly tell the role that the inventory hosts are in fact Undercloud servers. By default this is not defined and the data structure defined in 'docker_registry_setup_undercloud_profile' is used to dynamically determine if the host is an Undercloud or not.
docker_registry_setup_on_undercloud: ''

# For an OpenStack Undercloud docker registry, these files are generated.
docker_registry_setup_upstream_images_file: "/tmp/upstream-container-images.yaml"
docker_registry_setup_overcloud_images_file: "/tmp/overcloud-images.yaml"

# Should the local registry sync with upstream registry?
docker_registry_setup_sync: True

# This forces setup of local registry even if one is already setup and hosting images
docker_registry_setup_force: False

# Packages needed to setup docker registry
docker_registry_setup_packages:
  - docker
  - docker-distribution
  - docker-python
  - python-docker-py

# docker registry services to configure
docker_registry_setup_services:
  - docker
  - docker-distribution

# ports used for setup in local firewall
docker_registry_setup_ports:
  - "{{ docker_registry_setup_local_port }}/tcp"

# Container images to populate in registry. This list by default only lists the OpenStack container images needed to deploy an OverCloud, but any images could be listed here, as long as they are found on the CDN
# This list was taken from the overcloud-images.yaml that `openstack overcloud container image prepare` command outputs. As that file contains several variables used in the deployment, several of the container images are the same, thus causing duplicates. This list has been cleaned up of all dupes.
docker_registry_setup_images:
  - aodh-api
  - aodh-evaluator
  - aodh-listener
  - aodh-notifier
  - ceilometer-compute
  - ceilometer-central
  - ceilometer-notification
  - cinder-api
  - cinder-scheduler
  - cinder-volume
  - mariadb
  - cron
  - glance-api
  - gnocchi-api
  - gnocchi-metricd
  - gnocchi-statsd
  - haproxy
  - heat-api-cfn
  - heat-api
  - heat-engine
  - horizon
  - iscsid
  - keystone
  - memcached
  - mariadb
  - neutron-server
  - neutron-dhcp-agent
  - neutron-l3-agent
  - neutron-metadata-agent
  - nova-api
  - nova-compute
  - nova-conductor
  - nova-api
  - nova-consoleauth
  - nova-compute
  - nova-libvirt
  - nova-api
  - nova-placement-api
  - nova-scheduler
  - nova-novncproxy
  - neutron-openvswitch-agent
  - panko-api
  - rabbitmq
  - redis
  - swift-account
  - swift-proxy-server
  - swift-container
  - swift-object
  - swift-proxy-server

# This variable defines the Undercloud profile. This 
docker_registry_setup_undercloud_profile:
  packages:
    - instack-undercloud
    - python2-openstackclient
  services:
    - openstack-glance-api.service
    - openstack-heat-engine.service
    - openstack-ironic-conductor.service
    - openstack-ironic-inspector-dnsmasq.service
    - openstack-ironic-inspector.service
    - openstack-mistral-api.service
    - openstack-mistral-engine.service
    - openstack-mistral-executor.service
    - openstack-nova-api.service
    - openstack-nova-compute.service
    - openstack-nova-conductor.service
    - openstack-nova-scheduler.service
    - openstack-swift-account-reaper.service
    - openstack-swift-account.service
    - openstack-swift-container-sync.service
    - openstack-swift-container-updater.service
    - openstack-swift-container.service
    - openstack-swift-object-expirer.service
    - openstack-swift-object-reconstructor.service
    - openstack-swift-object-updater.service
    - openstack-swift-object.service
    - openstack-swift-proxy.service
    - openstack-zaqar@.service
  files:
    - "/home/stack/stackrc"
    - "/home/stack/undercloud.conf"
  dirs:
    - "/home/stack/"
...
